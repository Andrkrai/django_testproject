# ТЗ к тестовому проекту "Площадка для отзывов и предложений"
#
# Описание: компания заказчик хочет создать небольшую систему, которая будет накапливать отзывы и предложения
# клиентов на продукты компании.
#
# Реализация:
# 1) Развернуть классическое django приложение feedbacks-api
# 2) Подключить к нему djangorestframework
# 3) Создать приложение (батарейку) django, назовем его catalog
# 3.1) создадим модели каталога (django models):
# 3.1.1) Категории продуктов (название, описание, slug (почитайте про SlugField)
# 3.1.2) Продукт (название, описание, slug, внешний ключ на категорию)
# 3.2) Создать админку категорий и продуктов (нужно подключить и настроить django.contrib.admin)
#
# 4) Описать еще одно приложение (батарейку) django, назовем его feedbacks
# 4.1) В приложении нужно создать модели:
# 4.1.1) Отзыв. Для простоты не будем делать авторизованный доступ, так что клиент заполняет следующие поля:
# - ФИО
# - email клиента
# - телефон (CharField)
# - ссылка на продукт (ForeignKey)
# - текстовое описание отзыва
# - оценка (от 1 до 5)
#
# 4.2) Требуется админка отзывов (django.contrib.admin)
#
# 5) Реализация DRF API (какие требуются эндпоинты - требуется изучить viewsets):
# 5.1) catalog.CategoriesViewset (вывод по 5 штук на страницу категорий компании)
# 5.2) catalog.ProductViewset (аналогично, с возможностью отфильтровать по категории (DRF filters))
# 5.3) feedbacks.FeedbackAPIView(APIView) - класс представления, который принимает на вход форму отзыва (поля
# указаны выше. Просьба реализовать валидацию через rest_framework.ModelSerializer) и сохраняет в базе данных
# 5.4) Доп.задание (необязательное): не дать создавать отзывы чаще, чем раз в 5 минут (DRF throttling)
#
# 6) Доп.задание для удобства собственной разработки (необязательное): Для тестирования полученного API можно
# развернуть Swagger через OpenAPI (библиотека drf-yasg). Либо используйте PostMan.
#
# Примечание: в виду большого объема работ, можно не комментировать код, админку моделей можно сделать попроще.
# Для установки пакетов используйте pip. После установки всех пакетов просьба выполнить команду:
# pip freeze > requirements.txt (если ранее использовали pip-tools или poetry, то можно через них)
